import pyaudio
import wave
import numpy as np 

FORMAT = pyaudio.paFloat32
#FORMAT = pyaudio.paInt32
CHANNELS = 2 
RATE = 48000
CHUNK = 1024 
RECORD_SECONDS = 5
WAVE_OUTPUT_FILENAME = "recordedFile.wav"
audio = pyaudio.PyAudio()

def getVolRatio(sampleL, sampleR):
    volL = np.sum(sampleL ** 2) / len(sampleL)
    volR = np.sum(sampleR ** 2) / len(sampleR)
    return 100 * ((volL - volR) / (volL + volR))

print("----------------------record device list---------------------")
info = audio.get_host_api_info_by_index(0)
numdevices = info.get('deviceCount')
for i in range(0, numdevices):
    if (audio.get_device_info_by_host_api_device_index(0, i).get('maxInputChannels')) > 0:
        print("Input Device id ", i, " - ", audio.get_device_info_by_host_api_device_index(0, i).get('name'))

print("-------------------------------------------------------------")

#index = int(input())
#priint("recording via index " + str(index))

stream = audio.open(
        format = FORMAT,
        channels = CHANNELS,
        rate = RATE,
        output = True,
        input = True,
#        input_device_index = i)ndex,
        frames_per_buffer = CHUNK)

print ("recording started")
Recordframes = []
 
for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
    result = np.fromstring(stream.read(CHUNK), dtype = np.float32)
    #result = np.fromstring(stream.read(CHUNK), dtype = np.int32)
    result = np.reshape(result, (CHUNK, CHANNELS))
    left = result[:, 0]#.tobytes()
    right = result[:, 1]#.tobytes()

    #delta = left - right
    #print(np.average(left))

    volumeRatio = getVolRatio(left, right)
    print("%.2f" % volumeRatio, flush = True)

    #Recordframes.append(left)
print ("recording stopped")

stream.stop_stream()
stream.close()
audio.terminate()
 
#waveFile = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
##waveFile.setnchannels(CHANNELS)
#waveFile.setnchannels(1)
#waveFile.setsampwidth(audio.get_sample_size(FORMAT))
#waveFile.setframerate(RATE)
#waveFile.writeframes(b''.join(Recordframes))
#waveFile.close()

